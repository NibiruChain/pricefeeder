// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/NibiruChain/pricefeeder/types (interfaces: PricePoster)

// Package mock_types is a generated GoMock package.
package mock_types

import (
	reflect "reflect"

	types "github.com/NibiruChain/pricefeeder/types"
	types0 "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockPricePoster is a mock of PricePoster interface.
type MockPricePoster struct {
	ctrl     *gomock.Controller
	recorder *MockPricePosterMockRecorder
}

// MockPricePosterMockRecorder is the mock recorder for MockPricePoster.
type MockPricePosterMockRecorder struct {
	mock *MockPricePoster
}

// NewMockPricePoster creates a new mock instance.
func NewMockPricePoster(ctrl *gomock.Controller) *MockPricePoster {
	mock := &MockPricePoster{ctrl: ctrl}
	mock.recorder = &MockPricePosterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPricePoster) EXPECT() *MockPricePosterMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockPricePoster) Close() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Close")
}

// Close indicates an expected call of Close.
func (mr *MockPricePosterMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockPricePoster)(nil).Close))
}

// SendPrices mocks base method.
func (m *MockPricePoster) SendPrices(arg0 types.VotingPeriod, arg1 []types.Price) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendPrices", arg0, arg1)
}

// SendPrices indicates an expected call of SendPrices.
func (mr *MockPricePosterMockRecorder) SendPrices(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendPrices", reflect.TypeOf((*MockPricePoster)(nil).SendPrices), arg0, arg1)
}

// Whoami mocks base method.
func (m *MockPricePoster) Whoami() types0.ValAddress {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Whoami")
	ret0, _ := ret[0].(types0.ValAddress)
	return ret0
}

// Whoami indicates an expected call of Whoami.
func (mr *MockPricePosterMockRecorder) Whoami() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Whoami", reflect.TypeOf((*MockPricePoster)(nil).Whoami))
}
